#define Debug (NE dead)
{
    Flock's Reflection
    Flock's Gambit
    Reveal
    Flock's Disintegration
}


#define Set Y Zero (NE dead) = vec -> vec
{
    Vector Disintegration
    Bookkeeper's Gambit: v-
    Numerical Reflection: 0
    Jester's Gambit
    Vector Exaltation
}


#define Arc (NE dead) = -> vec 
{

    //get xDist
    $end
    Set Y Zero
    $start
    Set Y Zero
    Subtractive Distillation
    Length Purification
    Store($xDist)

    //get height
    $end
    $start
    Subtractive Distillation
    Vector Disintegration
    Bookkeeper's Gambit: v-v
    Store($height)

    //get t
    $xDist
    $pos
    Multiplicative Distillation
    Store($t)

    
    //y = sin((pi/xDist)*t)*0.5*xDist

    //sin((pi/xDist)*t)
    Arc's Reflection
    $xDist
    Division Distillation
    $t
    Multiplicative Distillation
    Sine Purification

    //*0.5*xDist
    <{0.5}>
    $xDist
    Multiplicative Distillation
    Multiplicative Distillation

    //get between pos
    $end
    $start
    Subtractive Distillation
    $pos
    Multiplicative Distillation
    $start
    Additive Distillation

    //add arc Y
    Numerical Reflection: 0
    Rotation Gambit
    Numerical Reflection: 0
    Vector Exaltation
    Additive Distillation  
    
}

//block pos, arc end pos
#define Move Block Along Path (NE dead) = num, num
{


    Jester's Gambit
    //[end pos, start pos]
    Vector Reflection -Y
    Additive Distillation
    Store($wispStart)
    Gemini Decomposition
    //[end pos, start pos]
    Store($start)
    Store($end)

    //summon a wisp
    //for i in range 0..=1 where i increases by 0.1:
        //generate arc point
        //move block to point
    Nullary Reflection
    Store($block)

    Numerical Reflection: 0
    Store($pos)

    Extern {
        Path Cyclic Code
    }


    $wispStart
    <{5000000}>
    Summon Cyclic Wisp
    

    
}


//starting stack: [start pos, end pos]
#define Path Cyclic Code (NE dead)
{           
    //if first iteration
    if {
        Identity Reflection
        Equality Distillation
    } then {
        $wait
        Delay Wisp
    }
    //if no block (first iteration after wait)
    else if {
        $block
        Nullary Reflection
        Equality Distillation       
    } then {
        //summon falling block
        $wispStart
        Vector Reflection +Y
        Greater Translocation
        Falling Block
        //get falling block
        $wispStart
        Vector Reflection +Y
        Additive Distillation
        Entity Purification: @Block
        Store($block)
    }
    //if pos is > 1
    else if {
        $pos
        Numerical Reflection: 1
        Maximus Distillation
    } then {
        //set velocity to 0
        $block
        Gemini Decomposition
        Pace Purification
        Numerical Reflection: -1
        Multiplicative Distillation
        Impulse
        //destroy wisp
        Bookkeeper's Gambit: ----------
    //if pos is <= 1
    } else {
        //get location on arc
        Arc

        //move wisp to new location
        Gemini Decomposition
        Pathfinder's Gambit
        

        //get vec between arc point and current position
        $block  
        Compass' Purification II: (0, 0, 0)
        Subtractive Distillation

        //subtract current velocity
        $block
        Gemini Decomposition
        Pace Purification: (0, 0, 0)
        Subtractive Distillation
        Impulse
        
        //increment pos
        $pos   
        <{0.05}>
        Additive Distillation
        Store($pos)
    }
    Hermes' Gambit

    Nullary Reflection
}

//origin -> block
#define Get Random Surface Block (NE dead) = vec -> vec
{
    //rand x
    Entropy Reflection
    Numerical Reflection: 30
    Multiplicative Distillation
    Numerical Reflection: 15
    Subtractive Distillation
    Ceiling Purification
    
    //y
    Numerical Reflection: 15
    
    //rand z
    Entropy Reflection
    Numerical Reflection: 30
    Multiplicative Distillation
    Numerical Reflection: 15
    Subtractive Distillation
    Ceiling Purification

    Vector Exaltation
    Additive Distillation
    
    //raycast down
    Vector Reflection -Y
    Archer's Distillation: (0, 0, 0) 
}

/////////////

// Vector Reflection Zero
// Summon Sentinel


Numerical Reflection: 0
Store($wait)


{
    Locate Sentinel
    Additive Distillation
    Vector Reflection +Y
    Additive Distillation
    
        

    Mind's Reflection
    Compass' Purification: (0, 0, 0)
    Get Random Surface Block
    Vector Reflection +Y
    Additive Distillation
    Jester's Gambit
    Move Block Along Path
    
    $wait
    Numerical Reflection: 4
    Additive Distillation
    Store($wait)
}

<{[(0.00, 0.00, 2.00), (0.00, 0.00, 1.00), (0.00, 0.00, 0.00), (0.00, 0.00, -1.00), (0.00, 0.00, -2.00), (0.00, 1.00, 2.00), (0.00, 1.00, 1.00), (0.00, 1.00, 0.00), (0.00, 1.00, -1.00), (0.00, 1.00, -2.00), (0.00, 2.00, 2.00), (0.00, 2.00, 1.00), (0.00, 2.00, 0.00), (0.00, 2.00, -1.00), (0.00, 2.00, -2.00)]}>
Thoth's Gambit